plugins {
    id 'org.jetbrains.kotlin.multiplatform'
}

repositories {
    // Coroutines from the outer project are published by previous CI buils step
    mavenLocal()
    mavenCentral()
    maven { url "https://maven.pkg.jetbrains.space/kotlin/p/kotlin/dev" }
    // This is bootstrap wasm repo, remove it as regular atomic-fu will be published
    maven { url "https://maven.pkg.jetbrains.space/kotlin/p/wasm/experimental" }
}

kotlin {
    jvm()
    js(IR) {
        nodejs()
    }
    wasm() {
        nodejs()
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
            }
        }
        jsTest {
            dependencies {
                implementation kotlin('test-js')
            }
        }
        wasmTest {
            dependencies {
                implementation kotlin('test-wasm')
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
                implementation kotlin('test-junit')
            }
        }
    }
    targets {
        configure([]) {
            tasks.getByName(compilations.main.compileKotlinTaskName).kotlinOptions {
                jvmTarget = "1.8"
            }
        }
    }
}

// This is bootstrap atomicFU version with wasm support, remove it as regular atomic-fu will be published
allprojects {
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.name == 'atomicfu-wasm') {
                details.useVersion '0.21.0-wasm0'
            }
        }
    }
}

// Update node version to support latest wasm engine
rootProject.extensions.findByType(org.jetbrains.kotlin.gradle.targets.js.nodejs.NodeJsRootExtension.class).with {
    it.nodeVersion = "20.2.0"
}